// Test generated by RoostGPT for test nodeJsTest1 using AI Type Azure Open AI and AI Model roost-gpt4-32k

import { processResponse } from "../postmanCollectionProcessor.js";
import { logger } from "../utils/logUtility.js";

describe("processResponse Test Suite", () => {
  let responseNode;

  beforeEach(() => {
    jest.spyOn(logger, "error");
    responseNode = {
      header: [{ key: "Content-Type", value: "application/json" }],
      body: {
        raw: '{"foo":"bar", "xyz": "123"}',
        options: { raw: { language: "json" } }
      }
    };
  });

  test("should process headers successfully", async () => {
    const result = await processResponse(responseNode);
    expect(logger.error).not.toHaveBeenCalled();
    expect(result.header[0].value).toBe("{{res_Content-Type}}");
    expect(result.body.raw).toBe('{\n    "foo": "{{res_foo}}",\n    "xyz": "{{res_xyz}}"\n}');
  });

  test("should handle error when parsing raw body", async () => {
    responseNode.body.raw = "invalid json";
    await processResponse(responseNode);
    expect(logger.error).toHaveBeenCalledTimes(1);
    expect(logger.error).toHaveBeenCalledWith("Error parsing raw body:", expect.any(String), "invalid json");
  });

  afterAll(() => {
    jest.restoreAllMocks();
  });
});
