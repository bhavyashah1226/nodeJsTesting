// Test generated by RoostGPT for test nodeJsTest1 using AI Type Azure Open AI and AI Model roost-gpt4-32k

import { readSpecFile } from './postmanCollectionProcessor.js';
import { logger } from "../utils/logUtility.js";
import fs, { readFileSync } from "fs";
import SwaggerParser from "swagger-parser";
import { convertOpenApiToPostman } from "../utils/openapiToPostmanConverter.js";

jest.mock('fs');
jest.mock('../utils/logUtility.js');
jest.mock('swagger-parser');
jest.mock('../utils/openapiToPostmanConverter.js');

describe('Method: readSpecFile', () => {

  beforeEach(() => {
    jest.resetAllMocks();
  });

  test('should successfully validate api data and write to file', async () => {
    SwaggerParser.validate.mockResolvedValue('valid api data');
    convertOpenApiToPostman.mockResolvedValue({postmanCollection: JSON.stringify({item: 'postman data'})});
    await readSpecFile('someSpecFile');

    expect(SwaggerParser.validate).toHaveBeenCalledWith('someSpecFile');
    expect(convertOpenApiToPostman).toHaveBeenCalledWith('someSpecFile');
    expect(fs.writeFileSync).toHaveBeenCalledWith("modified_postman.json", JSON.stringify({item: 'postman data'}, null, 2));
  });

  test('should log warning when swagger validation fails', async () => {
    SwaggerParser.validate.mockRejectedValue('validation error');
    await readSpecFile('someSpecFile');

    expect(SwaggerParser.validate).toHaveBeenCalledWith('someSpecFile');
    expect(logger.warn).toHaveBeenCalledWith('Error validating swagger yaml: validation error');
    expect(fs.writeFileSync).not.toBeCalled();
  });

  test('should log error when conversion to postman fails', async () => {
    SwaggerParser.validate.mockResolvedValue('valid api data');
    convertOpenApiToPostman.mockRejectedValue(new Error('conversion error'));
    await readSpecFile('someSpecFile');

    expect(SwaggerParser.validate).toHaveBeenCalledWith('someSpecFile');
    expect(convertOpenApiToPostman).toHaveBeenCalledWith('someSpecFile');
    expect(logger.error).toHaveBeenCalledWith('Error:', 'conversion error');
    expect(fs.writeFileSync).not.toBeCalled();
  });

});
