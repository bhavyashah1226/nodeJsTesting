// Test generated by RoostGPT for test nodeJsTest1 using AI Type Azure Open AI and AI Model roost-gpt4-32k

const loggerMockFn = jest.fn();
logger.warn = loggerMockFn;
logger.error = loggerMockFn;

jest.mock('fs');
jest.mock('swagger-parser');
jest.mock('../utils/openapiToPostmanConverter.js');

const VALID_SPEC_FILE = 'valid_spec.yaml';
const INVALID_SPEC_FILE = 'invalid_spec.yaml';

describe('Testing readSpecFile method', () => {
  afterEach(() => {
    jest.clearAllMocks();
  });

  test('Test with valid spec file', async () => {
    SwaggerParser.validate.mockResolvedValue({swagger: '2.0'});
    convertOpenApiToPostman.mockResolvedValue({ postmanCollection: JSON.stringify({}) });

    await readSpecFile(VALID_SPEC_FILE);

    expect(SwaggerParser.validate).toHaveBeenCalled();
    expect(fs.writeFileSync).toHaveBeenCalled(); 
  });

  test('Test with invalid spec file', async () => {
    SwaggerParser.validate.mockRejectedValue(new Error('Invalid file'));
    convertOpenApiToPostman.mockRejectedValue(new Error('Conversion error'));

    await readSpecFile(INVALID_SPEC_FILE);

    expect(SwaggerParser.validate).toHaveBeenCalled();
    expect(logger.warn).toHaveBeenCalled();
    expect(logger.error).toHaveBeenCalled();
    expect(fs.writeFileSync).not.toHaveBeenCalled(); 
  });
});
