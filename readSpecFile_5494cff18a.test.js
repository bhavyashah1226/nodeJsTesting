// Test generated by RoostGPT for test nodeJsTest1 using AI Type Azure Open AI and AI Model roost-gpt4-32k

describe("readSpecFile method tests", () => {

  beforeAll(() => {
    // Setting logger level to silent, to ignore logs during testing
    logger.transports.forEach((t) => (t.silent = true));
  });

  afterAll(() => {
    // Bring back logger level to previous value after all tests
    logger.transports.forEach((t) => (t.silent = false));
  });

  test("should correctly read and validate spec file", async () => {
    const specFile = path.resolve("path_to_test_api_spec_file");
    await readSpecFile(specFile);
    const modifiedPostmanJson = readFileSync("modified_postman.json");
    expect(modifiedPostmanJson).toBeTruthy();
  });

  test("should throw error when provided spec file path is incorrect", async () => {
    const incorrectSpecFilePath = path.resolve("incorrect_path_to_test_api_spec_file");
    await expect(readSpecFile(incorrectSpecFilePath)).rejects.toThrow();
  });

  test("should throw error when provided file is not a valid api spec file", async () => {
    const invalidSpecFile = path.resolve("path_to_invalid_api_spec_file");
    await expect(readSpecFile(invalidSpecFile)).rejects.toThrow();
  });

  afterEach(() => {
    if(fs.existsSync("modified_postman.json")) {
      // Delete the generated file after each test to ensure isolation
      fs.unlinkSync("modified_postman.json");
    }
  });
});
