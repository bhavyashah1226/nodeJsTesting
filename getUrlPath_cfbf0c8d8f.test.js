// Test generated by RoostGPT for test nodeJsTest1 using AI Type Azure Open AI and AI Model roost-gpt4-32k

import { getUrlPath } from "./postmanCollectionProcessor.js";

describe("Testing getUrlPath function", () => {
  let urlObj;

  beforeEach(() => {
    urlObj = {
      path: ["sample", "path"],
      query: [
        { key: "param1", value: "value1" },
        { key: "param2", value: "value2" }
      ]
    };
  });

  test("returns correct URL string for valid path and query", () => {
    const expectedUrl = "/sample/path?param1=value1&param2=value2";
    const actualUrl = getUrlPath(urlObj);
    expect(actualUrl).toBe(expectedUrl);
  });

  test("returns correct URL string when only path is provided", () => {
    delete urlObj.query;
    const expectedUrl = "/sample/path";
    const actualUrl = getUrlPath(urlObj);
    expect(actualUrl).toBe(expectedUrl);
  });

  test("returns correct URL string when only query is provided", () => {
    urlObj.path = null;
    const expectedUrl = "?param1=value1&param2=value2";
    const actualUrl = getUrlPath(urlObj);
    expect(actualUrl).toBe(expectedUrl);
  });

  test("returns empty string when neither path nor query is provided", () => {
    urlObj.path = null;
    urlObj.query = null;
    const expectedUrl = "";
    const actualUrl = getUrlPath(urlObj);
    expect(actualUrl).toBe(expectedUrl);
  });
});
