// Test generated by RoostGPT for test nodeJsTest1 using AI Type Azure Open AI and AI Model roost-gpt4-32k

import { generateTestCase } from './postmanCollectionProcessor.js';

describe('generateTestCase method tests', () => {

  let testScript, responseObj, methodType, swaggerObj, swaggerContent;

  beforeEach(() => {
    testScript = "";
    methodType = "GET";
    responseObj = {
      code: 200,
      name: 'Successful Response',
      status: 'OK',
      header: [
        {
          key: 'Content-Type',
          value: 'application/json'
        }
      ],
      body: JSON.stringify({
        key1: 'value1',
        key2: 'value2'
      })
    };
    swaggerObj = {
      responses: {
        '200': {
          description: 'OK',
          content: {
            'application/json': {
              schema: {
                properties: {
                  key1: {
                    type: 'string'
                  },
                  key2: {
                    type: 'string'
                  }
                }
              }
            }
          }
        }
      }
    };
    swaggerContent = JSON.stringify(swaggerObj);
  });

  test('testScript generation with valid request and response', async () => {
    try {
      const result = await generateTestCase(testScript, responseObj, methodType, swaggerObj, swaggerContent);
      expect(result).toBeTruthy();
    } catch (err) {
      expect(err).toBeNull();
    }
  });

  test('testScript generation with invalid request and response', async () => {
    try {
      const invalidResponseObj = JSON.parse(JSON.stringify(responseObj));
      invalidResponseObj.code = 404;
      const result = await generateTestCase(testScript, invalidResponseObj, methodType, swaggerObj, swaggerContent);
      expect(result).toBeTruthy();
    } catch (err) {
      expect(err).not.toBeNull();
    }
  });

});
