// Test generated by RoostGPT for test nodeJsTest1 using AI Type Azure Open AI and AI Model roost-gpt4-32k

describe('transformValues', () => {
  let json;

  beforeEach(() => {
    json = {
      stringProp: 'someValue',
      objectProp: { nestedProp:'nestedValue' },
      transformerValueProp: '{{transform_me}}'
    };
  });

  it('should transform all non object values to Transformer format', async () => {
    const result = await transformValues(json);
    
    expect(result).toEqual({
      stringProp: '{{stringProp}}',
      objectProp: { nestedProp:'{{nestedProp}}' },
      transformerValueProp: '{{transform_me}}'
    });
  });

  it('should call addVariable function for every non-object property in json', async () => {
    const addVariable = jest.fn();

    // Assuming addVariable is exported from the same module
    transformValues.__set__('addVariable', addVariable);

    await transformValues(json);

    expect(addVariable).toHaveBeenCalledTimes(3);
    expect(addVariable).toHaveBeenCalledWith('{{stringProp}}');
    expect(addVariable).toHaveBeenCalledWith('{{nestedProp}}');
    expect(addVariable).toHaveBeenCalledWith('{{transform_me}}');
  });

  it('should return a new object without mutating the original object', async () => {
    const copy = {...json};

    await transformValues(json);

    expect(json).toEqual(copy);
  });
});
